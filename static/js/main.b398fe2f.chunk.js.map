{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","prevProps","prevState","console","info","toUTCString","slice","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","timerNameId","handleShowClock","event","preventDefault","handleHideClock","document","addEventListener","removeEventListener","React","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SACEM,EACAC,GAEIA,EAAUR,OAASG,KAAKJ,MAAMC,MAEhCS,QAAQC,KAAKP,KAAKJ,MAAMC,KAAKW,cAAcC,OAAO,IAAK,IAGrDL,EAAUM,YAAcV,KAAKW,MAAMD,WAErCJ,QAAQM,MAAR,uBAA8BR,EAAUM,UAAxC,eAAwDV,KAAKW,MAAMD,cAxBzE,kCA4BE,WACET,OAAOY,cAAcb,KAAKD,WA7B9B,oBAgCE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAa,EAAcV,KAAKW,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGjB,EAAKW,cAAcC,OAAO,IAAK,YA7C1C,GAA2BM,aCP3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNc,UAAW,UACXW,UAAU,GAHd,EAMEC,YAAc,EANhB,EAuBEC,gBAAkB,SAACC,GACjBA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,UAAU,KAzB9B,EA4BEK,gBAAkB,SAACF,GACjBA,EAAMC,iBACN,EAAKtB,SAAS,CAAEkB,UAAU,KA9B9B,uDAQE,WAA2B,IAAD,OACxBrB,KAAKsB,YAAcrB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEO,UAAWM,QAC1B,MAEHW,SAASC,iBAAiB,cAAe5B,KAAK0B,iBAC9CC,SAASC,iBAAiB,QAAS5B,KAAKuB,mBAd5C,kCAiBE,WACEtB,OAAOY,cAAcb,KAAKsB,aAC1BK,SAASE,oBAAoB,cAAe7B,KAAK0B,iBACjDC,SAASE,oBAAoB,QAAS7B,KAAKuB,mBApB/C,oBAiCE,WACE,MAAgCvB,KAAKJ,MAA7Bc,EAAR,EAAQA,UAAWW,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GACC,cAAC,EAAD,CACEX,UAAWA,WAzCvB,GAAyBoB,IAAMf,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.b398fe2f.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport { Component } from 'react';\n\ninterface Props {\n  clockName: string,\n}\n\ninterface State {\n  time: Date\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n    prevState: Readonly<State>,\n  ): void {\n    if (prevState.time !== this.state.time) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }\n\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerNameId = 0;\n\n  componentDidMount(): void {\n    this.timerNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleHideClock);\n    document.addEventListener('click', this.handleShowClock);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerNameId);\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    document.removeEventListener('click', this.handleShowClock);\n  }\n\n  handleShowClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock\n            clockName={clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}